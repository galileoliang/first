#include <iostream>

using namespace std;

int main(int argc, char* argv[], char* env[]) 
{
    // 有了操作指標的方式與概念,還有stack/heap的知識,以後寫程式便可以"自由"操縱記憶體
    // 範例:
    // 現在我要用一個int,我可以不用預先宣告占用記憶體
    // 做法是:
    int* p;   // 宣告一個int指標
 
    // 申請記憶體
    p = (int*)malloc(sizeof(int)); // ----> malloc() 是一個C的基礎函數,它可以像系統要求一塊記憶體空間  
                                                // ----> malloc() 參數便是要求的記憶體空間大小(byte)
                                                // ----> sizeof 是 C的一個運算子,它可以找出()中物件占用的記憶體大小
                                                // ----> malloc()執行成功後會回傳申請成功記憶體區塊的指標
                                                // ----> 因為不知道使用者會拿這塊記憶體做什麼!所以型態是 void*
                                                // ----> void 是 不定/沒有/空/... 的意思, void* 就是 不定型指標 的意思
                                                // ----> 在C++環境中,  = 兩邊要求必須型態一致!所以用(int*)轉型
    // 現在 p 指向一塊可以儲存int值的空間了===>系統額外配在heap
    *p = 123;   // 可以用了
    cout << *p << endl;
    // 用完!歸還給系統
    free(p); // 不用的申請記憶體一定要歸還!否則系統會hold住這塊空間,不給其他程式使用,久了就.....

    // 可以繼續做其他的事...... 

    return 0;
}
